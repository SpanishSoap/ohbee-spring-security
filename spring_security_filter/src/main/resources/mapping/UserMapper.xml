<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.security.filter.demo.UserMapper">
  <resultMap id="BaseResultMap" type="com.security.filter.demo.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="account_non_expired" jdbcType="BIT" property="accountNonExpired" />
    <result column="account_non_locked" jdbcType="BIT" property="accountNonLocked" />
    <result column="credentials_non_expired" jdbcType="BIT" property="credentialsNonExpired" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, account_non_expired, account_non_locked, credentials_non_expired, 
    enabled
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.security.filter.demo.User">
    insert into user (id, username, password, 
      account_non_expired, account_non_locked, credentials_non_expired, 
      enabled)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{accountNonExpired,jdbcType=BIT}, #{accountNonLocked,jdbcType=BIT}, #{credentialsNonExpired,jdbcType=BIT}, 
      #{enabled,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.security.filter.demo.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="accountNonExpired != null">
        account_non_expired,
      </if>
      <if test="accountNonLocked != null">
        account_non_locked,
      </if>
      <if test="credentialsNonExpired != null">
        credentials_non_expired,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="accountNonExpired != null">
        #{accountNonExpired,jdbcType=BIT},
      </if>
      <if test="accountNonLocked != null">
        #{accountNonLocked,jdbcType=BIT},
      </if>
      <if test="credentialsNonExpired != null">
        #{credentialsNonExpired,jdbcType=BIT},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.security.filter.demo.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="accountNonExpired != null">
        account_non_expired = #{accountNonExpired,jdbcType=BIT},
      </if>
      <if test="accountNonLocked != null">
        account_non_locked = #{accountNonLocked,jdbcType=BIT},
      </if>
      <if test="credentialsNonExpired != null">
        credentials_non_expired = #{credentialsNonExpired,jdbcType=BIT},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.security.filter.demo.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      account_non_expired = #{accountNonExpired,jdbcType=BIT},
      account_non_locked = #{accountNonLocked,jdbcType=BIT},
      credentials_non_expired = #{credentialsNonExpired,jdbcType=BIT},
      enabled = #{enabled,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--user define-->
  <select id="selectByUsername" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where username = #{username}
  </select>
</mapper>